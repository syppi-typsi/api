openapi: "3.0.2"
info:
  title: syppiüßÉ / typsiüçπ API
  description: The API that powers üí™ syppiüßÉ / typsiüçπ
  version: "1.0"
servers:
  - url: http://localhost:3000
    description: Test Endpoint

components:
  schemas:
    drink:
      type: object
      description: "A drink object"
      required:
        - id
        - name
        - category
        - added_on
        - producer
      properties:
        id:
          type: integer
          description: "ID of the drink"
        name:
          type: string
          description: "Name of the drink"
        producer:
          type: string
          description: "The current manufacturer"
        brand:
          type: string
          description: "The general brand that the drink belongs to"
        description:
          type: string
          description: "Should be between 1-5 sentences in length"
        product_image:
          type: string
          description: "URL to the product image file"
        category:
          type: integer
          description: "The category ID the drink belongs to"
        added_on:
          type: string
          description: "ISO 8601 date and time of when the drink was added"
        rating:
          type: integer
          description: "The average rating for the drink"
        volumes:
          type: array
          description: "All available volumes of the drink"
          items:
            type: integer
            description: "Measured in milliliters"
        abv:
          type: number
          description: "Alcohol by volume, as number between 0-1"
        places:
          type: array
          description: "IDs of where the drink is available"
          items:
            type: integer
            description: "ID of place"
        nutritional_value:
          type: object
          description: "The nutritional values for the drink"
          properties:
            serving:
              type: integer
              description: "Serving size in milliliters"
            energy:
              type: object
              properties:
                kJ:
                  type: integer
                kcal:
                  type: integer
            fat:
              type: number
            sat_fat:
              type: number
            carbs:
              type: number
            sugar:
              type: number
            protein:
              type: number
            fiber:
              type: number
            salt:
              type: number

tags:
  - name: users
    description: User operations
  - name: drinks
    description: Drink operations
  - name: places
    description: Place operations
  - name: categories
    description: Category operations

paths:
  /users:
    get:
      tags:
        - users
      description: "Query all users"
      parameters: []
      responses:
        "200":
          description: OK
  /users/{id}:
    get:
      tags:
        - users
      description: "Query user by ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "application/json":
              examples:
                "Human Name":
                  value:
                    {
                      "username": "human_name",
                      "first_name": "Human",
                      "last_name": "Name",
                      "email": "human@example.com",
                      "registered_on": "2024-03-14T12:34:56",
                    }
  /drinks:
    get:
      tags:
        - drinks
      description: "Query all drinks"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                fields:
                  type: array
                  items:
                    type: string
                limit:
                  type: integer
                cursor:
                  type: integer
            examples:
              test:
                summary: Example
                value:
                  search: "ice"
                  fields: ["rating", "description"]
                  limit: 10
                  cursor: 0
      responses:
        "200":
          description: OK
    post:
      tags:
        - drinks
      description: ""
      parameters: []
      responses:
        "200":
          description: OK

  /places:
    get:
      tags:
        - places
      description: "Query all places"
      responses:
        "200":
          description: OK
  /categories:
    get:
      tags:
        - categories
      description: "Query all categories"
      responses:
        "200":
          description: OK
  /drinks/{id}:
    get:
      tags:
        - drinks
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/drink"
              examples:
                "J√§germeister":
                  value:
                    {
                      "id": 46,
                      "name": "J√§germeister",
                      "producer": "Mast-J√§germeister SE",
                      "brand": "J√§germeister",
                      "description": "J√§germeister (/Ààje…™…°…ôrma…™st…ôr/) is a German digestif made with 56 herbs and spices. Developed in 1934 by Wilhelm and Curt Mast, the recipe has not changed since its creation and continues to be served in its signature green glass bottle. It is the flagship product of Mast-J√§germeister SE headquartered in Wolfenb√ºttel, Germany. (Wikipedia)",
                      "product_image": "https://example.com/img/jagermeister.png",
                      "category": 42,
                      "added_on": "2024-03-14T12:34:56",
                      "rating": 78,
                      "volumes": [330, 500, 1000],
                      "abv": 0.35,
                      "places": [1, 3, 4],
                      "nutritional_value":
                        {
                          "serving": 20,
                          "energy": { "kJ": 209, "kcal": 50 },
                          "fat": 0.0,
                          "sat_fat": null,
                          "carbs": 2.8,
                          "sugar": 2.6,
                          "protein": 0.0,
                          "fiber": null,
                          "salt": null,
                        },
                    }
    delete:
      tags:
        - drinks
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
    patch:
      tags:
        - drinks
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
  /drinks/{id}/rate:
    put:
      tags:
        - drinks
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        # - name: rating
        #   in: query
        #   required: true
        #   schema:
        #     type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
            examples:
              test:
                summary: Example
                value:
                  rating: 70
      responses:
        "200":
          description: OK
